{"version":3,"sources":["src/components/dc-election-question/dc-election-question.css?tag=dc-election-question&encapsulation=shadow","src/components/dc-election-question/dc-election-question.tsx","src/components/dc-feature-summary/dc-feature-summary.css?tag=dc-feature-summary&encapsulation=shadow","src/components/dc-feature-summary/dc-feature-summary.tsx","src/components/dc-filter/dc-filter.css?tag=dc-filter&encapsulation=shadow","src/components/dc-filter/dc-filter.tsx","src/components/dc-loader/dc-loader.css?tag=dc-loader&encapsulation=shadow","src/components/dc-loader/dc-loader.tsx","src/components/dc-map/dc-map.css?tag=dc-map","src/components/dc-map/dc-map.tsx","src/components/dc-survey-summary/dc-survey-summary.scss?tag=dc-survey-summary&encapsulation=shadow","src/components/dc-survey-summary/dc-survey-summary.tsx"],"names":["dcElectionQuestionCss","DcElectionQuestion","[object Object]","hostRef","this","question","showNoResponse","type","ISurveyQuestionType","Choice","responses","candidates","state","filter","length","filteredCandidates","candidate","Race","match","h","response","_responseCount","applyFilters","formattedString","replace","footnote","focus","error","appearance","class","innerHTML","Text","Rank","Option","options","split","map","option","formatRankOptions","names","c","Candidate","join","text","enumeration","test","output","shuffle","Sort","Host","toLowerCase","renderNoResponse","renderResponse","dcFeatureSummaryCss","DcFeatureSummary","race","website","target","href","info","console","debug","undefined","id","renderWebsite","renderCandidates","renderInfo","dcFilterCss","DcFilter","url","m_filterOptions","fetchOptions","filters","fetch","json","features","feature","push","ANC_ID","attributes","SMD_ID","input","groupKey","result","reduce","r","a","Object","create","_event","filterChanged","emit","value","m_dropdownEl","newValue","slot","textLabel","selected","alignment","color","scale","width","onClick","filterDisplay","groupBy","filterOptions","subFilters","sub","renderOption","ref","el","label","placeholder","selection-mode","max-items","resetButton","dcLoaderCss","DcLoader","dcMapCss","DcMap","m_layerViews","m_layers","m_highlights","emitEvent","highlightFeature","featureSelected","event","detail","view","loadModules","m_view","basemap","navigation","mouseWheelZoomEnabled","browserTouchPanEnabled","then","Extent","FeatureLayer","Home","LabelClass","Search","smdStyle","symbol","opacity","outline","ancStyle","ancLabels","labelExpressionInfo","expression","haloSize","haloColor","font","size","weight","renderer","labelingInfo","smdLabels","outFields","maxScale","minScale","add","boundaryUrl","blendMode","highlightOptions","theExtent","xmin","ymin","xmax","ymax","spatialReference","wkid","constraints","geometry","rotationEnabled","searchExtent","sources","name","zoomScale","popupEnabled","layer","maxResults","searchFields","displayField","searchWidget","includeDefaultSources","ui","position","index","on","searchCompleteHandler","homeWidget","move","clear","when","whenLayerView","layerView","mapMouseHandler","mapLoaded","results","query","createQuery","queryFeatures","resultFeature","selectFeature","opts","include","hitTest","graphic","outlineFeature","remove","where","foundFeature","goTo","duration","easing","highlight","OBJECTID","featureEffect","excludedLabelsVisible","includedEffect","style","height","zoom","center","dcSurveySummaryCss","DcSurveySummary","questions","numberResponses","Math","ceil","trim","summary","formatResponse","count","keys","calculatePercentage","Type","renderEnumerationSummary","renderQuestionSummary"],"mappings":"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","sourcesContent":[":host {\n  display: block;\n  /* margin-bottom: 2em; */\n}\n\n/* dc-election-query {\n    position: sticky;\n    top: 0;\n} */\n\n.response:empty::before {\n  content: \"No candidates submitted responses in this ANC.\";\n  font-style: italic;\n  font-weight: 400;\n}\n\n.response {\n  font-weight: 600;\n  font-size: 1em;\n  padding: 1em 0;\n  margin-top: 0.5em;\n}\n.response-gallery .response::before {\n  content: \"\\203A\"\n}\n\n.footnote {\n  font-weight: 300px;\n  font-size: 0.8em;\n  font-style: italic;\n  padding-top: 0.5em; \n}\n\n/* Graph */\n\n.layout-choice {\n  display: grid;\n  grid-gap: 0.3em;\n  grid-template-columns: repeat( auto-fit, minmax(400px, 1fr) );\n\n}\n\n.layout-choice .response {\n  /* font-size: 1em;\n  font-weight: 400;\n  height: 4em; */\n  padding: 0 0.3em 0.3em 0.3em;\n  vertical-align: bottom;\n}\n/* Removing in favor of a vertical line from answer\n.response-gallery:not(:last-child) {\n    border-right: 1px solid #AAA;\n    padding-right: 0.3em;\n} */\n\n.response-quote, .response-rank {  \n  display: grid;\n  grid-template-columns: 0.1fr 1fr;\n  padding: 1em 0;\n  border-bottom: thin solid #DDD;\n}\n.response-rank .response {\n  font-weight: 300;\n  padding: 0;\n}\n.response-quote .response {\n  font-weight: 400;\n  font-size: 1em;\n  padding: 0.4em;\n  font-style: oblique;\n  quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\n}\n.response-quote .response:before {\n  content: open-quote;\n  color: #ccc;\n  font-size: 3em;\n  line-height: 0.1em;\n  margin-right: 0.25em;\n  vertical-align: -0.4em;\n}\n.response-quote .response:after {\n  content: close-quote;\n  color: #ccc;\n  font-size: 3em;\n  line-height: 0.1em;\n  margin-right: 0.25em;\n  vertical-align: -0.4em;\n}\n\n.rank-options {\n  padding: 0;\n  margin: 0;\n  font: italic 1em Georgia;\n  color: #666;\n}\n.rank-options  span {\n  font: normal 1em Arial;\n  color: #000;  \n}\n\n.rank-options li {\n  border: 1px solid #CCC;\n  padding: 0.5em;\n  margin-left: 1.5em;\n  margin-bottom: 0.5em;\n}\n.rank-options .ranked {\n  border: 1px solid #0f9535;\n}\n/* Remove numbers for unranked or omitted */\n.rank-options li.omit, .rank-options li.unranked {\n  list-style: none;\n}\n\n.omit .text {\n  font: normal 1em Arial;\n  text-decoration: line-through; \n  color: #555;\n}\n\n.omit .comment {\n  display: inline-block;\n  text-decoration: unset;\n  font-weight: 100;\n  padding-left: 0.5em;\n  font-style: italic;\n}","import { Component, Host, h, Prop } from '@stencil/core';\nimport { ISurveyCandidate, ISurveyQuestion, ISurveyQuestionType } from '../../utils/response';\nimport { shuffle } from '../../utils/utils';\nimport state from '../../utils/store'; // for passing filter\n\n@Component({\n  tag: 'dc-election-question',\n  styleUrl: 'dc-election-question.css',\n  shadow: true,\n})\nexport class DcElectionQuestion {\n\n  @Prop() question: ISurveyQuestion = null;\n  @Prop() showNoResponse: boolean = false;\n  @Prop() type: ISurveyQuestionType = ISurveyQuestionType.Choice;\n\n  /**\n  * Holds an Array of answers to candidates\n  * [ \n  *   {response: \"Yes\", \"candidates\": [\"C1\", \"C2\"]}, \n  *   {response: \"No\", \"candidates\": [\"C3\", \"C4\"]} \n  * ]\n  */\n  @Prop() responses: Array<any> = [];\n\n  applyFilters(candidates: Array<ISurveyCandidate>):Array<ISurveyCandidate> {  \n    if(state.filter && state.filter.length !== 0) {\n\n      let filteredCandidates = candidates.filter((candidate) => {\n        return candidate.Race.match(state.filter);\n      })\n      // console.debug(\"dc-election-question: applyFilters\", {filter: state.filter, question: this.question, filteredCandidates})\n      return filteredCandidates;\n    }\n    return candidates;\n  }\n  renderNoResponse() {\n    return (\n      <div>\n        We did not receive any responses from candidates in this jurisdiction\n      </div>\n    )\n  }\n\n  renderResponse(response, _responseCount:number = 2) {\n    let filteredCandidates = this.applyFilters(response.candidates);\n\n    // TODO: remove the prior change of this default response.\n    if(response.response !== \"No Response\" && filteredCandidates.length !== 0) {\n      // remove numeric prefix like `1. answer` -> `answer`\n      let formattedString = response.response.replace(/^[0-9]\\.\\s+/, '').replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n      \n      // Parse out any footnotes in response\n      let footnote = '', focus = formattedString;\n      try {\n        [, focus, footnote] = formattedString.match(/(.*)_(.*)_/);\n      } catch (error) {\n        // we'll just ignore...\n      }\n      formattedString = `${focus} <span class=\"footnote\">${footnote}`;\n\n      let appearance: \"grid\" | \"stack\" | \"narrow\" | \"quote\" = 'grid';\n      // console.debug(\"dc-election-question: Response\", {type: this.type, formattedString, filteredCandidates})\n      switch (this.type) {\n        case ISurveyQuestionType.Choice:\n          // appearance = responseCount > 3 ? 'narrow':'grid';\n          // console.debug(\"dc-election-question: choice\", {formattedString, filteredCandidates})\n\n          return (\n              <div class=\"response-gallery\">\n                <dc-election-gallery \n                    appearance={appearance} \n                    candidates={filteredCandidates}\n                  >\n                  <div class=\"response\" innerHTML={formattedString}></div>\n                </dc-election-gallery>\n              </div>\n            )\n          // break;\n\n        case ISurveyQuestionType.Text:\n          appearance = 'quote';\n          const candidates = filteredCandidates;\n          // console.debug(\"dc-election-question: text\", {formattedString, filteredCandidates})\n\n          return (\n              <div class=\"response-quote\">\n                <dc-election-gallery \n                    appearance={appearance} \n                    candidates={candidates}\n                  >\n                </dc-election-gallery>\n                  <div class=\"response\" innerHTML={formattedString}></div>\n              </div>\n            )        \n          // break;\n\n        // Parsing logic shows Rank as Option b/c it's the \"last one\"\n        case ISurveyQuestionType.Rank:\n        case ISurveyQuestionType.Option:\n          appearance = 'quote';\n          // console.debug(\"dc-election-question\", {formattedString, filteredCandidates})\n          const options = formattedString.split('|');\n          formattedString = (\n            <ol class=\"rank-options\">\n              {options.map((option) => {\n                return(\n                  this.formatRankOptions(option)\n                )\n              })}\n            </ol>  \n          )\n          return (\n              <div class=\"response-rank\">\n                <dc-election-gallery \n                    appearance={appearance} \n                    candidates={filteredCandidates}\n                  >\n                </dc-election-gallery>\n                <div class=\"response\">{formattedString}</div>\n              </div>\n            )            \n          // break;\n\n        default:\n          break;\n      }\n\n    } else if(this.showNoResponse) {\n      const names = response.candidates.map((c) => {\n        return (c?.Candidate)\n      })\n      return (\n        <div class=\"footnote\">No response from {names.join(', ')}</div>\n      )\n    }\n\n    // otherwise no response;\n  }\n\n  // Logic for normal text and `~omit~ (comment)`\n  // example: <span><span class='text'>omit</span><span class='comment'>comment</span>\n  formatRankOptions(text:string):string {\n    // const omit = text.match(/\\~([\\w\\s,-]+)\\~/g) ? true : false;\n    let enumeration = 'unranked';\n    switch (true) {\n      case /\\~(.*)\\~/g.test(text):\n        enumeration = 'omit';\n        break;\n      case /^#/.test(text):\n        enumeration = 'ranked';\n        text = text.replace(/^#/,'');\n        break;\n    \n      default:\n        break;\n    }\n    text = text.replace(/\\~(.*)\\~ (\\([\\w\\s]+\\))/g, \"<span class='text'>$1</span> <span class='comment'>$2</span>\");\n    text = `<span>${text}</span>`;\n    const output = <li class={enumeration} innerHTML={text}></li>;\n    return output;\n  }\n\n\n  render() {\n    const responses = shuffle(this.responses, this.question.Sort);\n  \n    // console.debug(\"dc-election-question: render\", {q: this.question, responses})\n    return (\n      <Host>\n        <slot></slot>\n        <dc-election-query\n          question={this.question}\n        >\n        </dc-election-query>\n        <div class={`response layout-${this.type.toLowerCase()}`}>\n          {responses.length === 0 ? this.renderNoResponse() : null }\n            \n          {responses.map((response) => {\n            return this.renderResponse(response, responses.length)\n          })}\n        </div>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\n#summary {\n  border: thin solid #BBB;\n  padding: 5px;\n}\n#summary-race {\n  font-weight: 600;\n  font-size: 1.2em;\n}\n#summary-candidates ul {\n  margin: 0 0 0 20px;\n  padding-left: 0;\n}\nh4 {\n  padding: 0;\n  margin: 5px 0 0 0;\n}","import { Component, Host, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'dc-feature-summary',\n  styleUrl: 'dc-feature-summary.css',\n  shadow: true,\n})\nexport class DcFeatureSummary {\n\n  @Prop({ }) race: string = null;\n  @Prop({ }) website: string = \"\";\n  @Prop() candidates: any;\n\n  async componentWillLoad() {\n  }\n\n  renderWebsite(website:string) {\n    // console.log(\"renderWebsite\", website)\n    if(!!website && website.length > 0) {\n      return (<span>Website: <a target=\"_new\" href={website}>{website}</a></span>)\n    } else {\n      return \"\";\n    }\n\n\n  }\n  renderCandidates(candidates: Array<any> = []) {\n    let output = <em>No candidates</em>;\n    if(candidates.length > 0) {\n      output = (\n          <ul>\n        {candidates.map((candidate) =>{\n          return <li>{candidate['Candidate']} <a href={candidate['Website']}>email</a></li>\n        })}\n      </ul>\n      )\n    }\n    return output;\n  }\n  renderInfo(info) {\n    \n    console.debug(\"render-feature-summary\", {info})\n    if(info === undefined) {\n      return \"\";\n    }\n\n    const candidates = info.candidates.filter(c => c['Candidate'] !== '')\n    return (\n      <div id=\"summary\">\n        <div id=\"summary-race\">{info.race}</div>\n        <div id=\"summary-website\">{this.renderWebsite(this.website)}</div>\n        <div id=\"summary-candidates\">\n          <h4>Candidates</h4>\n\n          {this.renderCandidates(candidates)}\n        </div>\n      </div>\n    )\n  }\n  render() {\n    let output = [];\n    if(this.race !== null) {\n      const info = this.candidates[this.race];\n      output = this.renderInfo(info);\n    }\n    return (\n      <Host>\n        <slot></slot>\n        {output}\n      \n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\n\n.filters {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n}\n.filter {\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n  flex: 1;\n  max-width: 200px;\n  padding-right: 2em;\n}","import { Component, Event, EventEmitter, Host, h, State, Prop, Listen, Watch } from '@stencil/core';\nimport \"@esri/calcite-components/dist/calcite/calcite.css\";\n// import \"@esri/calcite-components/dist/components/calcite-icon\";\n\n// https://developers.arcgis.com/calcite-design-system/get-started/\n\n@Component({\n  tag: 'dc-filter',\n  styleUrl: 'dc-filter.css',\n  shadow: true,\n})\nexport class DcFilter {\n  @Prop({ mutable: true, reflect: true }) filter:string = \"\";\n  @Prop() url: string = \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/55/query?where=1%3D1&text=&objectIds=&time=&timeRelation=esriTimeRelationOverlaps&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&distance=&units=esriSRUnit_Foot&relationParam=&outFields=ANC_ID%2CSMD_ID&returnGeometry=false&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=&havingClause=&returnIdsOnly=false&returnCountOnly=false&orderByFields=SMD_ID&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&historicMoment=&returnDistinctValues=false&resultOffset=&resultRecordCount=&returnExtentOnly=false&sqlFormat=none&datumTransformation=&parameterValues=&rangeValues=&quantizationParameters=&featureEncoding=esriDefault&f=json\";\n  \n  @Event({ cancelable: false })  filterChanged: EventEmitter<any>;\n\n  @State() m_filterOptions:Array<any> = [];\n\n  m_dropdownEl: HTMLCalciteComboboxElement;\n\n  componentWillLoad() {\n    this.fetchOptions();\n  }\n\n\n  // TODO: extract hard-coded ANC_ID, SMD_ID attribute names to @Prop\n  async fetchOptions() {\n    const filters = [];\n    const response = await fetch(this.url);\n    const json = await response.json();\n    json.features.map((feature) => {\n      filters.push({ANC_ID: feature.attributes.ANC_ID, SMD_ID: feature.attributes.SMD_ID});\n    })\n    this.m_filterOptions = filters;\n\n  }\n  groupBy(input: Array<any>, groupKey:string) {\n    const result = input.reduce(function (r, a) {\n              r[a[groupKey]] = r[a[groupKey]] || [];\n              r[a[groupKey]].push(a);\n              return r;\n          }, Object.create(null));\n    return result;\n  }\n\n  @Listen(\"calciteComboboxChange\")\n  dropdownChangedHandler(_event) {\n    this.filterChanged.emit({ value: this.m_dropdownEl.value });\n  }\n  @Watch('filter')\n  filterPropChanged(newValue: string) {\n    console.debug(\"dc-filter: filterPropChanged\", newValue);\n    this.m_dropdownEl.value = newValue;\n  }\n\n  renderOption(option: string, slot:string = null) {\n      return (<calcite-combobox-item \n                  value={option} \n                  textLabel={option}\n                  selected={option === this.filter}\n                  >\n                  {slot}\n                </calcite-combobox-item>\n      )\n  }\n  resetButton() {\n    return (\n        <calcite-button\n          class=\"filter\"\n          alignment=\"start\"\n          appearance=\"solid\"\n          color=\"blue\"\n          scale=\"m\"\n          href=\"\"\n          type=\"button\"\n          width=\"auto\"\n          onClick={() => this.filter = null}\n        >\n          Back to Summary\n        </calcite-button>      \n    )    \n  }  \n  render() {\n    const filterDisplay = this.groupBy(this.m_filterOptions, 'ANC_ID');\n\n    const filterOptions = [];\n    for(let filter in filterDisplay) {\n      const subFilters = filterDisplay[filter].map((sub) => {\n        return this.renderOption(sub['SMD_ID']);\n      })\n      filterOptions.push (\n        this.renderOption(filter, subFilters)\n      );\n    }\n    return (\n      <Host>\n        <div class=\"filters\">\n          <slot></slot>\n          <calcite-combobox\n            class=\"filter\"\n            ref={(el) => this.m_dropdownEl = el}\n            label=\"search\"\n            placeholder=\"Search by ANC\"\n            selection-mode=\"single\"\n            scale=\"m\"\n            max-items=\"0\"\n          >\n            {filterOptions}\n          </calcite-combobox>\n          {this.filter ? this.resetButton() : \"\"}\n        </div>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\n\n.message {\n  font-weight: 400;\n  font-style: italic;\n  color: #444;\n  text-align: center;\n}\n\n#arrowAnim {\n  width: 100vw;\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: blue;\n}\n\n.arrow {\n  width: 5vw;\n  height: 5vw;\n  border: 2.5vw solid;\n  border-color: #0f9535 transparent transparent #0f9535;\n  transform: rotate(135deg);\n}\n\n\n.arrowSliding {\n  position: absolute;\n  -webkit-animation: slide 4s linear infinite; \n          animation: slide 4s linear infinite;\n}\n\n.delay1 {\n  -webkit-animation-delay: 1s; \n    animation-delay: 1s;\n}\n.delay2 {\n  -webkit-animation-delay: 2s; \n    animation-delay: 2s;\n}\n.delay3 {\n  -webkit-animation-delay: 3s; \n    animation-delay: 3s;\n}\n\n@-webkit-keyframes slide {\n    0% { opacity:0; transform: translateX(15vw); }\t\n   20% { opacity:1; transform: translateX(9vw); }\t\n   80% { opacity:1; transform: translateX(-9vw); }\t\n  100% { opacity:0; transform: translateX(-15vw); }\t\n}\n@keyframes slide {\n    0% { opacity:0; transform: translateX(15vw); }\t\n   20% { opacity:1; transform: translateX(9vw); }\t\n   80% { opacity:1; transform: translateX(-9vw); }\t\n  100% { opacity:0; transform: translateX(-15vw); }\t\n}","import { Component, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'dc-loader',\n  styleUrl: 'dc-loader.css',\n  shadow: true,\n})\nexport class DcLoader {\n\n  render() {\n    return (\n      <Host>\n        <div class=\"message\"><slot></slot></div>\n        <div id=\"arrowAnim\">\n          <div class=\"arrowSliding\">\n            <div class=\"arrow\"></div>\n          </div>\n          <div class=\"arrowSliding delay1\">\n            <div class=\"arrow\"></div>\n          </div>\n          <div class=\"arrowSliding delay2\">\n            <div class=\"arrow\"></div>\n          </div>\n          <div class=\"arrowSliding delay3\">\n            <div class=\"arrow\"></div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\narcgis-hub-map {\n  border: thin solid #BBB;\n}\n","import { Component, Event, EventEmitter, Host, h, Listen, State, Method, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'dc-map',\n  styleUrl: 'dc-map.css',\n  shadow: false,\n})\nexport class DcMap {\n\n  @Prop() filter:string = \"\";\n  @State() m_view;\n  @State() m_layerViews = {};\n  @State() m_layers = {};\n  @State() m_highlights = {};\n\n  @Event({ cancelable: false })  featureSelected: EventEmitter<any>;\n  @Event({ cancelable: false })  mapLoaded: EventEmitter<any>;\n\n  @Method()\n  public async selectFeature(feature, emitEvent:boolean = true) {\n    // filter = filter.slice(0, 2);\n    // console.debug(\"dc-map: selectFeature\", {attributes: feature.attributes, emitEvent} )\n    this.highlightFeature( feature )\n    if(emitEvent) {\n      this.featureSelected.emit({ feature: feature })\n    }\n  }\n\n\n  @Listen('arcgisHubMapViewReady')\n  async handleMapViewReady(event: CustomEvent<any>): Promise<void> {\n    const { detail: { view, loadModules } } = event;\n    this.m_view = view;\n    this.m_view.map.basemap = \"streets-vector\";\n    this.m_view.navigation = {\n      mouseWheelZoomEnabled: false,\n      browserTouchPanEnabled: false\n    }\n\n    loadModules([\n      'esri/geometry/Extent',\n      'esri/layers/FeatureLayer',\n      'esri/widgets/Home',\n      \"esri/layers/support/LabelClass\",\n      'esri/widgets/Search'\n    ])\n      .then(([Extent, FeatureLayer, Home, LabelClass, Search]) => {\n        // Add ANC Boundaries\n        const smdStyle = {\n          type: \"simple\",\n          symbol: {\n            type: \"simple-fill\",\n            opacity: 0,\n            color: [200,200,200,0.1],\n            outline: {  // autocasts as new SimpleLineSymbol()\n              width: 0.5,\n              color: \"#0f9535\"\n            }\n          }\n        }\n        const ancStyle = {\n          type: \"simple\",\n          symbol: {\n            type: \"simple-fill\",\n            opacity: 1,\n            color: [0,0,0,0],\n            outline: {  // autocasts as new SimpleLineSymbol()\n              width: 0.5,\n              color: [255,255,255,0.8]\n            }\n          }\n        }        \n        const ancLabels = new LabelClass({\n          labelExpressionInfo: { expression: \"$feature.NAME\" },\n          symbol: {\n            type: \"text\",  // autocasts as new TextSymbol()\n            color: \"white\",\n            haloSize: 0.5,\n            haloColor: \"black\",\n            font: {\n              size: 12,\n              weight: \"bold\"\n            }\n          }\n        });\n\n        // from https://opendata.dc.gov\n        this.m_layers['ancLayer'] = new FeatureLayer({\n          url: \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/54\",\n          renderer: ancStyle,\n          labelingInfo: [ancLabels]\n        });\n\n\n        const smdLabels = new LabelClass({\n          labelExpressionInfo: { expression: \"$feature.SMD_ID\" },\n          symbol: {\n            type: \"text\",  // autocasts as new TextSymbol()\n            color: \"black\",\n            haloSize: 0.5,\n            haloColor: \"white\",\n            font: {\n              size: 8\n            }\n\n          }\n        });\n        // from https://opendata.dc.gov\n        this.m_layers['smdLayer'] = new FeatureLayer({\n          url: \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/55\",\n          outFields: [\"*\"],\n          renderer: smdStyle,\n          maxScale: 0,\n          minScale: 1000000,\n          labelingInfo: [smdLabels]\n        })\n\n        this.m_view.map.add(this.m_layers['ancLayer']);\n        this.m_view.map.add(this.m_layers['smdLayer']);\n\n        //////////\n        // Masking\n        ////\n        const boundaryUrl = \"https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/Washington_DC_Boundary/FeatureServer\";\n        // const boundaryStyle = {\n        //   type: \"simple\",\n        //   symbol: {\n        //     type: \"simple-fill\",\n        //     opacity: 1,\n        //     color: [0,0,0,0],\n        //     outline: {  // autocasts as new SimpleLineSymbol()\n        //       width: 0.5,\n        //       color: [255,255,255,0.8]\n        //     }\n        //   }\n        // }\n        this.m_layers['boundaryLayer'] = new FeatureLayer({\n          url: boundaryUrl,\n          blendMode: \"destination-in\",\n          maxScale: 0,\n          minScale: 1000000,          \n          // renderer: boundaryStyle\n        })\n        this.m_view.map.add(this.m_layers['boundaryLayer']);\n\n\n        //////////\n        // Map interaction: highlight, controls, limits\n        ////\n        this.m_view.highlightOptions = {\n          color: \"#0f9535\"\n        }\n\n        // Washington, DC\n        const theExtent = new Extent({\n          xmin: -8584947.85844689,\n          ymin: 4691862.387048862,\n          xmax: -8561472.787091771,\n          ymax: 4721095.072076196,\n          spatialReference: {\n            wkid: 3857\n          }\n        });\n        this.m_view.constraints = {\n          geometry: theExtent,\n          minScale: 500000,\n          maxScale: 10000,\n          rotationEnabled: false\n        };\n\n        // this.m_view.ui.components = [\"zoom\"];\n        const searchExtent = {\n          geometry: theExtent\n        };\n        const sources = [{\n          url: \"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer\",\n          name: \"DC Address Search\",\n          zoomScale: 50000,\n          popupEnabled: false,\n          filter: searchExtent\n        }, {\n          layer: this.m_layers['smdLayer'],\n          placeholder: \"Search SMD\",\n          maxResults: 5,\n          searchFields: [\"NAME\"],\n          displayField: \"NAME\",\n          name: \"DC SMD\"\n        }];\n        const searchWidget = new Search({\n          view: this.m_view,\n          includeDefaultSources: false,\n          sources: sources\n        });\n        // Adds the search widget below other elements in\n        // the top left corner of the view\n        this.m_view.ui.add(searchWidget, {\n          position: \"top-left\",\n          index: 2\n        });\n        searchWidget.on(\"search-complete\", (event) => {this.searchCompleteHandler(event)});\n\n        let homeWidget = new Home({\n          view: this.m_view\n        });\n        view.ui.add(homeWidget, \"top-left\");\n        view.ui.move(\"zoom\", \"top-right\");\n        homeWidget.on(\"go\", () => {\n          searchWidget.clear();\n          this.highlightFeature();\n          this.featureSelected.emit({ });\n        })\n\n        this.m_view\n          .when()\n          .then(() => {\n            // console.log(\"when view\", [this.m_layers, this.m_layers['ancLayer']]);\n            return this.m_layers['smdLayer'].when();\n          })\n          .then((layer) => {\n            // console.log(\"when view\", layer);\n            return this.m_view.whenLayerView(layer);\n          })\n          .then((layerView) => {\n            this.m_layerViews['smdLayer'] = layerView;\n            \n            this.m_view.on(\"pointer-move\", (event) => {this.mapMouseHandler(event)});\n            this.m_view.on(\"click\", (event) => {this.mapMouseHandler(event)});\n          })\n          // Get ANC Layer definitions\n          .then(() => {\n            return this.m_layers['ancLayer'].when();\n          })\n          .then((layer) => {\n            return this.m_view.whenLayerView(layer);\n          })\n          .then((layerView) => {\n            this.m_layerViews['ancLayer'] = layerView;\n            this.mapLoaded.emit();\n          })\n\n      });\n  }\n  searchCompleteHandler (event) {\n    // The results are stored in the event Object[]\n    let feature = event.results[0].results[0].feature;\n    let query = this.m_layerViews['smdLayer'].createQuery();\n    query.geometry = feature.geometry;\n    // console.debug(\"search-complete\", query)\n    this.m_layers['smdLayer'].queryFeatures(query).then((result) => {\n      let resultFeature = result.features[0];\n      // console.debug(\"search-complete: resultFeature\", resultFeature.attributes)\n      this.selectFeature(resultFeature);\n    });\n  }\n\n  mapMouseHandler(event) {\n    const opts = {\n      include: this.m_layers['smdLayer']\n    }\n\n    this.m_view.hitTest(event, opts).then((response) => {\n      if (response.results.length) {\n        const feature = response.results[0].graphic;\n        this.outlineFeature(feature)\n\n        // currentANCName = response.results[0].graphic.attributes[\"NAME\"];\n        if (event.type === \"click\") {\n          // console.debug(\"dc-map: mapMouseHandler\", {feature})\n          this.selectFeature(feature);\n        }\n      }\n    });\n\n  }\n\n  // Feature clicked on\n  highlightFeature(feature = null) {\n    if (this.m_highlights['smdLayer']) {\n      this.m_highlights['smdLayer'].remove();\n    }\n    if (this.m_highlights['ancLayer']) {\n      this.m_highlights['ancLayer'].remove();\n    }\n    // clear Highlights\n    if(feature === null) {\n      return;\n    }\n    const query = this.m_layerViews['ancLayer'].createQuery();\n    query.where = `NAME = '${feature.attributes.ANC_ID}'`;\n    this.m_layerViews['ancLayer'].queryFeatures(query).then((result) => {\n      // console.debug(\"dc-map: highlightFeature 1\", {feature, where: query.where, result})\n\n\n      if(!!result && result.features.length > 0) {\n        const foundFeature = result.features[0];\n        \n        this.m_view.goTo(\n          {\n            target: foundFeature.geometry\n          },\n          {\n            duration: 2000,\n            easing: \"in-out-expo\"\n          }\n        )\n        // console.debug(\"dc-map: highlightFeature 2\", {lv: this.m_layerViews, an: this.m_layerViews['ancLayer'], hl: this.m_layerViews['ancLayer'].highlight})\n        this.m_highlights['ancLayer'] = this.m_layerViews['ancLayer'].highlight(foundFeature.attributes.OBJECTID);\n\n      }\n    });\n    // this.outlineFeature(feature)\n    // Highlight the specific SMD\n    if(feature.attributes.SMD_ID !== undefined) {\n      const query = this.m_layerViews['smdLayer'].createQuery();\n      query.where = `SMD_ID = '${feature.attributes.SMD_ID}'`;\n\n\n      // console.debug(\"dc-map: highlightFeature 2\", {feature, where: query.where})\n\n      this.m_layerViews['smdLayer'].queryFeatures(query).then((result) => {\n        const foundFeature = result.features[0];\n        this.m_highlights['smdLayer'] = this.m_layerViews['smdLayer'].highlight(foundFeature.attributes.OBJECTID);\n      });  \n    }\n    \n  }\n\n  // Feature hovered\n  outlineFeature(feature) {\n    this.m_layers['smdLayer'].featureEffect = {\n      filter: {\n        where: `SMD_ID = '${feature.attributes.SMD_ID}'`\n      },\n      excludedLabelsVisible: true,\n      includedEffect: \"brightness(5) hue-rotate(270deg) contrast(100%) saturate(150%) \"\n    }\n\n    // this.m_layerViews['smdLayer'].queryFeatures(query).then((ids) => {\n    //   if (highlight) {\n    //     highlight.remove();\n    //   }\n    //   // highlight = this.m_layerViews['smdLayer'].highlight(ids.features[0].attributes.OBJECTID);\n    // }); \n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <arcgis-hub-map\n          style={{ height: '400px' }}\n          zoom=\"10\"\n          center=\"-77.05,38.9\"\n          basemap=\"gray-vector\"\n        ></arcgis-hub-map>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n  --label-width: 300px;\n  --label-height: 60px;\n}\n\n.no-summary {\n  display: none;\n}\ndl {\n  font-size: 0.9rem;\n  border-top: thin solid #888;\n  padding-top: 0.7em;\n}\ndl dd {\n  font-size: 0.9rem;\n}\n\ndl {\n  display: flex;\n  background-color: white;\n  flex-direction: column;\n  width: 100%;\n  max-width: 700px;\n  position: relative;\n  padding: 20px;\n}\n\ndt {\n  align-self: flex-start;\n  width: 100%;\n  font-weight: 700;\n  display: block;\n  font-size: 1.2em;\n  font-weight: 700;\n  margin-bottom: 20px;\n  // margin-left: var(--label-width);\n}\n\n.text {\n  font-weight: 600;\n  display: flex;\n  text-align: right;;\n  align-items: center;\n  height: var(--label-height);\n  width: var(--label-width);\n  background-color: white;\n  position: absolute;\n  left: 0;\n  justify-content: flex-end;\n}\n\n.percentage {\n  font-size: .8em;\n  line-height: 1;\n  // text-transform: uppercase;\n  // width: 100%;\n  height: var(--label-height);\n  margin-left: var(--label-width);\n  background: repeating-linear-gradient(\n  to right,\n  #ddd,\n  #ddd 1px,\n  #fff 1px,\n  #fff 5%\n);\n  \n  &:after {\n    content: \"\";\n    display: block;\n    background-color: #3d9970;\n    width: 50px;\n    margin-bottom: 10px;\n    height: 90%;\n    position: relative;\n    top: 50%;\n    transform: translateY(-50%);\n    transition: background-color .3s ease;\n    cursor: pointer;\n  }\n  &:hover,\n  &:focus {\n    &:after {\n       background-color: #aaa; \n    }\n  }\n}\n\n@for $i from 1 through 100 {\n  .percentage-#{$i} {\n    &:after {\n      $value: ($i * 1%);\n      width: $value;\n    }\n  }\n}","import { Component, Host, h, Prop, State } from '@stencil/core';\nimport { ISurveyQuestionType } from '../../utils/response';\nimport { shuffle } from '../../utils/utils';\n@Component({\n  tag: 'dc-survey-summary',\n  styleUrl: 'dc-survey-summary.scss',\n  shadow: true,\n})\nexport class DcSurveySummary {\n\n  @Prop() questions = null;\n  @State() numberResponses:number = 0;\n\n  componentDidLoad() {\n    // todo - fix count to be more resilient in case first question is open-ended\n    this.numberResponses = this.questions[0].responses.length;\n  }\n  calculatePercentage(value: number): number {\n    return Math.ceil(value / this.numberResponses * 100)\n  }\n  formatResponse(text:string):string {\n    return text.replace(/^\\d+\\./,'').replace(/_(.*)_/, '').trim();\n  }\n  renderEnumerationSummary(question) {\n    // console.debug(\"dc-survey-summary: renderEnumeration\", {question});\n    \n    const responses = shuffle(question.responses, question.question.Sort);\n\n    // Responses might have footnotes that should be left out of summary\n    const summary = responses.reduce((output, response) => {\n      const r = this.formatResponse( response.response );\n      if(!output[r]) {\n        output[r] = {\n          count: 0\n        }\n      }\n      output[r].count += response.candidates.length;\n      return output;\n    }, {})\n\n    return (\n      <dl>\n        <dt class=\"question\">\n          <dc-election-query question={question.question}></dc-election-query>\n        </dt>\n        {Object.keys(summary).map((response) => {\n          return (\n          <dd class={`percentage percentage-${this.calculatePercentage(summary[response].count)}`}>\n            <span class=\"text\">\n              {response}: {summary[response].count}\n            </span>\n          </dd>)\n        })}\n      </dl>\n    )\n  }\n\n  renderQuestionSummary(question) {\n    // console.debug(\"dc-survey-summary: renderQuestionSummary\", {question})\n    switch (question.question.Type) {\n      case ISurveyQuestionType.Choice:\n        \n        return this.renderEnumerationSummary(question);\n        // break;\n    \n      default:\n        return <span class=\"no-summary\">No summary</span>;\n        // break;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <h3>Summary of All {this.numberResponses} Responses</h3> \n        {this.questions.map((question) => {\n          return this.renderQuestionSummary(question);\n        })}\n      </Host>\n    );\n  }\n\n}\n"]}