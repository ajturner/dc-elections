{"version":3,"sources":["src/components/dc-election-candidate/dc-election-candidate.css?tag=dc-election-candidate&encapsulation=shadow","src/components/dc-election-candidate/dc-election-candidate.tsx","src/components/dc-election-gallery/dc-election-gallery.css?tag=dc-election-gallery&encapsulation=shadow","src/components/dc-election-gallery/dc-election-gallery.tsx","src/components/dc-election-query/dc-election-query.css?tag=dc-election-query&encapsulation=shadow","src/components/dc-election-query/dc-election-query.tsx"],"names":["dcElectionCandidateCss","DcElectionCandidate","[object Object]","hostRef","this","fullname","photo","office","bio","website","endorsed","replace","imageSrc","getAssetPath","h","Host","class","data-ribbon","src","alt","innerHTML","displayName","href","target","title","dcElectionGalleryCss","DcElectionGallery","candidates","appearance","output","length","push","map","candidate","undefined","Race","Website","Endorsed","renderResponses","dcElectionQueryCss","DcElectionQuery","question","q","Question","preface","focus","match","error","renderQuestion"],"mappings":"yDAAA,MAAMA,EAAyB,w+CCQlBC,EAAmB,MANhCC,YAAAC,aAQUC,KAAAC,SAAmB,KACnBD,KAAAE,MAAgB,KAChBF,KAAAG,OAAiB,KACjBH,KAAAI,IAAc,KACdJ,KAAAK,QAAkB,KAClBL,KAAAM,SAAoB,KAGpBR,YAAYG,GAClB,OAAOA,EAASM,QAAQ,IAAI,MAAWA,QAAQ,WAAY,qCAG7DT,SAEE,MAAMU,EAAWC,EAAa,oBAAoBT,KAAKE,SACvD,OACEQ,EAACC,EAAI,KACLD,EAAA,MAAA,CAAKE,MACDZ,KAAKM,SAAW,WAAa,GAAEO,cAEnBb,KAAKM,SAAW,kBAAoB,IAElDI,EAAA,OAAA,MACCV,KAAKE,MACFQ,EAAA,MAAA,CAAKI,IAAKN,EAAUO,IAAK,iBAAiBf,KAAKC,aAC/C,KACHD,KAAKC,SACFS,EAAA,OAAA,CAAME,MAAM,WAAWI,UAAWhB,KAAKiB,YAAYjB,KAAKC,YACxD,KACHD,KAAKG,OACFO,EAAA,OAAA,CAAME,MAAM,UAAUZ,KAAKG,QAC3B,KACHH,KAAKI,IACFM,EAAA,OAAA,CAAME,MAAM,OAAOZ,KAAKI,KACxB,KACHJ,KAAKK,QACFK,EAAA,OAAA,CAAME,MAAM,WAAUF,EAAA,IAAA,CAAGQ,KAAMlB,KAAKK,QAASc,OAAO,OAAOC,MAAO,cAAcpB,KAAKC,YAAU,YAC/F,4DC/CZ,MAAMoB,EAAuB,mVCOhBC,EAAiB,MAL9BxB,YAAAC,aAMwCC,KAAAuB,WAAyB,GACxCvB,KAAAwB,WAAmD,OAGlE1B,kBACN,IAAI2B,EAAS,GACb,GAAGzB,KAAKuB,WAAWG,QAAU,EAAG,CAC9BD,EAAOE,KACLjB,EAAA,KAAA,KAAA,mBAGC,CACHV,KAAKuB,WAAWK,KAAKC,IAIjB,GAAGA,EAAU,eAAiBC,WAAaD,EAAU,aAAaH,SAAW,EAAG,CAC9E,OAEFD,EAAOE,KACLjB,EAAA,wBAAA,CACEE,MAAO,OAAOiB,EAAUE,KAAKxB,QAAQ,MAAM,MAC3CL,MAAO,GAAG2B,EAAU,WACpB5B,SAAU4B,EAAU,aACpB1B,OAAQ0B,IAAS,MAATA,SAAS,OAAA,EAATA,EAAWE,KACnB1B,QAASwB,IAAS,MAATA,SAAS,OAAA,EAATA,EAAWG,QACpB1B,UAAUuB,IAAS,MAATA,SAAS,OAAA,EAATA,EAAWI,YAAa,MAAQ,KAAO,YAM3D,OAAOR,EAET3B,SAEE,OACEY,EAACC,EAAI,KACHD,EAAA,OAAA,MACAA,EAAA,MAAA,CAAKE,MAAO,WAAWZ,KAAKwB,cACzBxB,KAAKkC,gCChDhB,MAAMC,EAAqB,uOCQdC,EAAe,MAL5BtC,YAAAC,aAMUC,KAAAqC,SAA4B,KAEpCvC,eAAeuC,GACb,MAAMC,EAAID,EAASE,SAAShC,QAAQ,kBAAmB,QACvD,IAAIiC,EAAU,GAAIC,EAAQH,EAE1B,KACE,CAAGE,EAASC,GAASH,EAAEI,MAAM,cAC7B,MAAOC,IAOT,MAAMlB,EAAS,CACbf,EAAA,OAAA,CAAME,MAAM,UAAUI,UAAWwB,IACjC9B,EAAA,OAAA,CAAME,MAAM,QAAQI,UAAWyB,KAEjC,OAAOhB,EAGT3B,SACE,OACEY,EAACC,EAAI,KACHD,EAAA,OAAA,MACCV,KAAK4C,eAAe5C,KAAKqC","sourcesContent":[":host {\n  \n}\n\ndiv {\n  border: thin solid #eee;\n  padding: 0.5em;\n  display: grid;\n}\n\n.fullname {\n  font-weight: 600;\n  font-size: 1em;\n}\n\n.bio, .office {\n  color: #444;\n  font-size: 0.9em;\n  font-weight: 300;  \n}\n\nimg {\n  font-weight: 200; /* alt text */\n  font-size: 0.6em;\n  font-style: italic;\n  width: 100px;\n}\na {\n  font-size: 0.8em;\n  font-weight: 400;\n}\n\n.ribbon {\n  --f: 10px; /* control the folded part*/\n  --r: 15px; /* control the ribbon shape */\n  --t: 10px; /* the top offset */\n  \n  position: relative;\n  inset: var(--t) calc(-1*var(--f)) auto auto;\n  padding: 0 10px var(--f) calc(10px + var(--r));\n  clip-path: \n    polygon(0 0,100% 0,100% calc(100% - var(--f)),calc(100% - var(--f)) 100%,\n      calc(100% - var(--f)) calc(100% - var(--f)),0 calc(100% - var(--f)),\n      var(--r) calc(50% - var(--f)/2));\n  background: green;\n  box-shadow: 0 calc(-1*var(--f)) 0 inset #0005;\n}\n\n.withdrawn {\n  text-decoration: line-through;\n}\n.endorsed {\n  border: 2px solid #0f9535;\n  --d:6px;  /* folded part */\n  --c:#0f9535; /* color */\n  --f:10px; /* ribbon font-size */\n  position: relative;\n\n}\n.endorsed::before {\n  content: attr(data-ribbon);\n  font-size:var(--f);\n  /* I : position & coloration */\n  position: absolute;\n  color:white;\n  top: 0;\n  right: 0;\n  transform: translate(29.29%, -100%) rotate(45deg);\n  transform-origin: bottom left;\n  padding: 5px 35px calc(var(--d) + 5px);\n  background: linear-gradient(rgba(0,0,0,0.5) 0 0) bottom/100% var(--d) no-repeat var(--c);\n  /* II : clipping */\n  clip-path: polygon(0 0,100% 0,100% 100%,calc(100% - var(--d)) calc(100% - var(--d)),var(--d) calc(100% - var(--d)) , 0 100%);\n  /* III : masking */\n  -webkit-mask: \n      linear-gradient( 135deg, transparent calc(50% - var(--d)*0.707),#fff 0) bottom left,\n      linear-gradient(-135deg, transparent calc(50% - var(--d)*0.707),#fff 0) bottom right;\n  -webkit-mask-size:300vmax 300vmax;\n  -webkit-mask-composite: destination-in, xor;\n   mask-composite: intersect;\n}","import { Component, Host, h, Prop, getAssetPath } from '@stencil/core';\n\n@Component({\n  tag: 'dc-election-candidate',\n  styleUrl: 'dc-election-candidate.css',\n  shadow: true,\n  assetsDirs: ['assets'],\n})\nexport class DcElectionCandidate {\n\n  @Prop() fullname: string = null;\n  @Prop() photo: string = null;\n  @Prop() office: string = null;\n  @Prop() bio: string = null;\n  @Prop() website: string = null;\n  @Prop() endorsed: boolean = null;\n\n  // Add zero-width space for optional line-break on names with an apostrophe\n  private displayName(fullname:string):string {\n    return fullname.replace(/'/,\"'\\u200B\").replace(/\\~(.*)\\~/, \"<span class='withdrawn'>$1</span>\");\n  }\n\n  render() {\n    \n    const imageSrc = getAssetPath(`../assets/photos/${this.photo}`);\n    return (\n      <Host>\n      <div class={\n          this.endorsed ? \"endorsed\" : \"\"\n        }\n        data-ribbon={ this.endorsed ? \"GGWash Endorsed\" : \"\"}\n        >\n        <slot></slot>\n        {this.photo \n          ? <img src={imageSrc} alt={`Photograph of ${this.fullname}`} />\n          : null}\n        {this.fullname \n          ? <span class=\"fullname\" innerHTML={this.displayName(this.fullname)}></span>\n          : null}\n        {this.office \n          ? <span class=\"office\">{this.office}</span>\n          : null}\n        {this.bio \n          ? <span class=\"bio\">{this.bio}</span>\n          : null}\n        {this.website \n          ? <span class=\"website\"><a href={this.website} target=\"_new\" title={`Website of ${this.fullname}`}>website</a></span>\n          : null}  \n        </div>        \n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\n\n.gallery {\n  display: grid;\n  max-width: 800px;\n  grid-gap: 0.3em;\n  grid-template-columns: repeat(3, 1fr);\n}\n.narrow {\n  grid-template-columns: repeat(2, 1fr);\n}\n.gallery.grid {\n  margin-left: 1em;\n  padding: 0.5em 0 0 0.5em;\n  border-left: 3px solid #0f9535;\n}\n\n/* .gallery dc-election-candidate {\n} */\n\n/* Displays empty state */\n.gallery:empty::after {\n  margin: 5px 0 0 5px;\n  color: #AAA;\n  font-weight: 300;;\n  content: \"no responses\";\n}\n\n","import { Component, Host, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'dc-election-gallery',\n  styleUrl: 'dc-election-gallery.css',\n  shadow: true,\n})\nexport class DcElectionGallery {\n  @Prop({mutable: true, reflect: true}) candidates: Array<any> = [];\n  @Prop({mutable: true}) appearance: \"grid\" | \"stack\" | \"narrow\"| \"quote\" = \"grid\";\n\n\n  private renderResponses() {\n    let output = [];\n    if(this.candidates.length <= 0) {\n      output.push(\n        <em>no support</em>\n      )\n    }\n    else {\n      this.candidates.map((candidate) => {\n          // don't display placeholder candidates.\n          // used to add another column but with no responses.\n          // console.debug(\"dc-election-gallery: candidate\", {candidate})\n          if(candidate[\"Candidate\"] === undefined || candidate[\"Candidate\"].length === 0) {\n            return;\n          }\n          output.push(\n            <dc-election-candidate \n              class={`race${candidate.Race.replace(/\\s+/,'')}`}\n              photo={`${candidate[\"Photo\"]}`}\n              fullname={candidate[\"Candidate\"]}\n              office={candidate?.Race}\n              website={candidate?.Website}\n              endorsed={candidate?.Endorsed === \"Yes\" ? true : false}\n            ></dc-election-candidate>\n          )\n      })\n    }\n\n    return output;\n  }\n  render() {\n    // console.debug(\"dc-election-gallery\", this.candidates)\n    return (\n      <Host>\n        <slot></slot>\n        <div class={`gallery ${this.appearance}`}>\n          {this.renderResponses()}\n        </div>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n  position: sticky;\n  top: 0;\n  background-color: white;\n  opacity: 0.9;\n\n}\n.preface {\n  font-weight: 300;\n  font-size: 1em;\n  display: block;\n}\n\n.focus {\n  font-weight: 800;\n  font-size: 1.2em;\n  padding-top: 0.3em;\n  padding-bottom: 0.5em;\n  display: block;\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\nimport { ISurveyQuestion } from '../../utils/response';\n\n@Component({\n  tag: 'dc-election-query',\n  styleUrl: 'dc-election-query.css',\n  shadow: true,\n})\nexport class DcElectionQuery {\n  @Prop() question: ISurveyQuestion = null;\n\n  renderQuestion(question: ISurveyQuestion) {\n    const q = question.Question.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')\n    let preface = '', focus = q;\n\n    try {\n      [, preface, focus] = q.match(/_(.*)_(.*)/);\n    } catch (error) {\n      // we'll just ignore...\n    }\n\n    // return (\n    //   <div class=\"question\" innerHTML={formattedString} />\n    // );\n    const output = [\n      <span class=\"preface\" innerHTML={preface}>{}</span>,\n      <span class=\"focus\" innerHTML={focus}></span>\n    ]\n    return output;\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        {this.renderQuestion(this.question)}\n      </Host>\n    );\n  }\n\n}\n"]}